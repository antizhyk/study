#!/bin/bash - Вызов bash 

Стандартные bash команды работают в скрипте так же как и в терминале
Для запуска скрипта ему необходимо предоставить x правав к примеру chmod a+x name_script

varname=value - пример назначения переменных
varname=`ls -a|grep filename` -пример назанчения в переменную результатта выполнения bash команды

$1 $2 $3... таким образом назначаються места использования вводимых аргументов при вызове скрипта

varname=$((num1+num2)) пример выполнения арифметической операции 

=========================<Пример работы условий if else>===============================================

if [ "$1" == "Vasya"]; then
echo "Privet $1"

elif [ "$1" == "Trump" ]; then   
echo "Hi $1"

else echo "Unknow you" 
fi  

==========================<Пример работы условий if else>=====================================

x=$2

case $x in  если $x
	1) echo "One";; равна 1
    [2-9]) echo "Two-Niine";; равна значению с 2 до 9
  "Petya") echo "Hi Petya";; равна строке  
  	*) echo "Unknow sorry" равна всему
esac
    
=======================================<Запрос на значение в переменную>=======================================================

read -p "Текст" var

=======================================<Цикл while>=======================================================

COUNTER=0 -переменая счетьчик

while [ $COUNTER -lt 10 ]; do            -lt = больше меньше 
echo "Example text" - код для выполнения в цикле

COUNTER=$(($COUNTER+1)) - изменение значения счетчик и две строки снизу его варианты
# let COUNTER=COUNTER+1
# let COUNTER+=1

done

=======================================<Циклы for>=======================================================
=======================================<for one>=======================================================
Данный цикл хорош тем что он легко работает с файловой системой 
Первым аргументом он выбирает файл в который он погрузит результат выполнения второго аргумента
for myfile in `ls *.txt`; do 
	сat $myfile
done
=======================================<for two>=======================================================
В это цикле удобно задавать параметры счетчика
for x in {1..10}; do
	echo "X = $x"
done

=======================================<for three>=======================================================
Класический цикл с которым я работал в JS только скобок больше ))
for(( i=1; i<10; i++ )); do 
	echo "TEXT EXAMPLE"
done
=======================================<function>=======================================================

summa=0 Аргумент длдя результата математики (если надо)

myFunction() Создание функции
{
	summa=$(($1+$2)) Код, в данном случае арифметитческое действие
}

myFunction $1 $2 Вызов функции с аргуметами

echo "$summa" вывод результата функции

==============================================================================================







































